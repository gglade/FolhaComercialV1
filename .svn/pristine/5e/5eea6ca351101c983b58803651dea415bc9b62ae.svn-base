<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<context:component-scan base-package="br.farn.folhacomercial.eco"/>

	<security:http auto-config="true" access-denied-page="/negado.jsf">
		<security:logout invalidate-session="true"	logout-success-url="/index.jsf" />
		<security:intercept-url pattern="/app/adm/**"		access="ROLE_ADMIN" />
		<security:intercept-url pattern="/app/publico/**"	access="ROLE_ADMIN, ROLE_USER" />
		<security:form-login login-page="/index.jsf"	always-use-default-target="true" default-target-url="/app/publico/index.jsf"
			authentication-failure-url="/index.jsf?error=invalido" />
	</security:http>	
	
	<security:authentication-manager>
		<security:authentication-provider>			
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT username, password, enable FROM usuario WHERE username=?"
				authorities-by-username-query="SELECT username, authority FROM autorizacao WHERE username=?" />
		</security:authentication-provider>
	</security:authentication-manager>

<!--********************************************************************************-->
<!--CONEXAO COM BANCO-->
<!--*******************************************************************************-->
<bean id = "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="jdbc:postgresql://localhost:5432/Folha1.4"/>
            <property name="username" value="aluno"/>
            <property name="password" value="123"/>  
        
</bean>

<!--*********************************************************************************************-->
<!--ANOTACACAO 2: bean para tornar o session factory automatico, sem precisar criar na mao -->
<!--**********************************************************************************************-->
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
           
           <property name="dataSource" ref="dataSource"/>
           <property name="packagesToScan" value="br.farn.folhacomercial.eco.dominio"/>           
           
           <property name="hibernateProperties">
               <props>
                   <prop key="hibernate.hbm2ddl.auto">update</prop>
                   <prop key="hibernate.show_sql">true</prop>
                   <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                   
               </props>
            </property>
           
</bean>

<!--***************************************************************************************************-->
<!--ANOTACACAO 3: bean para tornar tudo mais fácil, usando templates do spring, facilita o código -->
<!--***************************************************************************************************-->
<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
               <property name="sessionFactory" ref="sessionFactory">
                   
                </property>   
               
</bean>

<!--*****************************************************************************************-->
<!--ANOTACACAO 4: bean para tornar os metodos transacionais -->
<!--*****************************************************************************************-->
<!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>

ANOTACACAO 5: Habilita o @Transacional 
<tx:annotation-driven/> -->


</beans>
